Search.setIndex({"docnames": ["auto_examples/diagnostics/index", "auto_examples/diagnostics/plot_1_resilience", "auto_examples/diagnostics/sg_execution_times", "auto_examples/index", "auto_examples/models/index", "auto_examples/models/plot_0_gam", "auto_examples/models/sg_execution_times", "contents", "faq", "guides/cases", "guides/cases/Example_BikeSharing", "guides/cases/Example_CaliforniaHousing", "guides/cases/Example_SolasSimu1_fairness", "guides/cases/Example_TaiwanCredit", "guides/comparison", "guides/data", "guides/diagnostics", "guides/explainability", "guides/introduction", "guides/models", "guides/workflow", "install", "modules/classes", "modules/generated/piml.api.Experiment", "modules/generated/piml.models.FIGSClassifier", "modules/generated/piml.models.FIGSRegressor", "modules/generated/piml.models.GAMClassifier", "modules/generated/piml.models.GAMINetClassifier", "modules/generated/piml.models.GAMINetRegressor", "modules/generated/piml.models.GAMRegressor", "modules/generated/piml.models.GLMClassifier", "modules/generated/piml.models.GLMRegressor", "modules/generated/piml.models.ReluDNNClassifier", "modules/generated/piml.models.ReluDNNRegressor", "preface", "tune_toc", "user_guide"], "filenames": ["auto_examples\\diagnostics\\index.rst", "auto_examples\\diagnostics\\plot_1_resilience.rst", "auto_examples\\diagnostics\\sg_execution_times.rst", "auto_examples\\index.rst", "auto_examples\\models\\index.rst", "auto_examples\\models\\plot_0_gam.rst", "auto_examples\\models\\sg_execution_times.rst", "contents.rst", "faq.rst", "guides\\cases.rst", "guides\\cases\\Example_BikeSharing.ipynb", "guides\\cases\\Example_CaliforniaHousing.ipynb", "guides\\cases\\Example_SolasSimu1_fairness.ipynb", "guides\\cases\\Example_TaiwanCredit.ipynb", "guides\\comparison.rst", "guides\\data.rst", "guides\\diagnostics.rst", "guides\\explainability.rst", "guides\\introduction.rst", "guides\\models.rst", "guides\\workflow.rst", "install.rst", "modules\\classes.rst", "modules\\generated\\piml.api.Experiment.rst", "modules\\generated\\piml.models.FIGSClassifier.rst", "modules\\generated\\piml.models.FIGSRegressor.rst", "modules\\generated\\piml.models.GAMClassifier.rst", "modules\\generated\\piml.models.GAMINetClassifier.rst", "modules\\generated\\piml.models.GAMINetRegressor.rst", "modules\\generated\\piml.models.GAMRegressor.rst", "modules\\generated\\piml.models.GLMClassifier.rst", "modules\\generated\\piml.models.GLMRegressor.rst", "modules\\generated\\piml.models.ReluDNNClassifier.rst", "modules\\generated\\piml.models.ReluDNNRegressor.rst", "preface.rst", "tune_toc.rst", "user_guide.rst"], "titles": ["Model Diagnostics", "Resilience - Performance: XGB", "Computation times", "Examples", "Interpretable ML Models", "Generalized additive model (GAM)", "Computation times", "Table Of Contents", "Frequently Asked Questions", "<span class=\"section-number\">8. </span>Case Studies", "<span class=\"section-number\">8.1. </span>BikeSharing Data", "<span class=\"section-number\">8.2. </span>CaliforniaHousing Data", "<span class=\"section-number\">8.4. </span>Fairness Simulation Study", "<span class=\"section-number\">8.3. </span>TaiwanCredit Data", "<span class=\"section-number\">6. </span>Model Comparison", "<span class=\"section-number\">2. </span>Data Processing", "<span class=\"section-number\">5. </span>Model Diagnostics", "<span class=\"section-number\">4. </span>Post-hoc Explainability", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">3. </span>Interpretable ML Models", "<span class=\"section-number\">7. </span>Low-Code Workflow", "Installing PiML", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.api</span></code>.Experiment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.FIGSClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.FIGSRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMINetClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMINetRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GLMClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GLMRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ReluDNNClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ReluDNNRegressor", "Welcome to scikit-learn", "&lt;no title&gt;", "User guide: contents"], "terms": {"exampl": [0, 1, 4, 5, 9, 10, 11, 12, 13], "concern": [0, 3, 4], "piml": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 18, 34], "diagnos": [0, 3, 23], "modul": [0, 3, 4], "resili": [0, 2, 3, 16, 18, 23], "perform": [0, 2, 3, 16, 18, 23, 32, 33], "xgb": [0, 2, 3, 23], "click": [1, 5, 10, 11, 12, 13], "here": [1, 5, 10, 11, 13, 23], "download": [1, 3, 5], "full": [1, 5, 22, 23], "code": [1, 3, 5, 7, 9, 10, 11, 12, 13, 18, 23, 36], "run": [1, 5, 10, 11, 12, 13, 23], "thi": [1, 5, 9, 10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33], "your": [1, 5], "browser": [1, 5], "via": [1, 5, 23], "binder": [1, 5], "model": [1, 6, 7, 8, 9, 12, 18, 23, 36], "diagnost": [1, 7, 9, 14, 23, 36], "train": [1, 8, 9, 12, 16, 18, 23, 27, 28, 32, 33], "from": [1, 5, 8, 10, 11, 12, 13, 23, 25, 27, 28, 33], "import": [1, 5, 10, 11, 12, 13, 23, 27, 28], "experi": [1, 5, 8, 10, 11, 12, 13], "xgboost": [1, 23], "xgbregressor": 1, "exp": [1, 5, 10, 11, 12, 13], "data_load": [1, 5, 10, 11, 12, 13, 23], "data": [1, 5, 7, 8, 9, 23, 24, 25, 27, 28, 32, 33, 36], "bikeshar": [1, 5, 9, 23, 36], "data_prepar": [1, 5, 10, 11, 12, 13, 23], "season": [1, 5, 10], "yr": [1, 5], "mnth": [1, 5], "hr": [1, 5], "holidai": [1, 5], "weekdai": [1, 5], "workingdai": [1, 5, 10], "weathersit": [1, 5], "0": [1, 2, 5, 6, 11, 13, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33], "1": [1, 5, 10, 11, 12, 13, 23, 24, 25, 27, 28, 32, 33], "6": [1, 5, 10, 11, 12, 13, 23, 26, 29], "2": [1, 5, 10, 11, 13, 18, 23, 24, 25, 27, 28, 32, 33], "3": [1, 5, 10, 11, 13, 23, 26, 29], "4": [1, 5, 10, 11, 12], "17374": [1, 5], "12": [1, 5, 13], "19": [1, 5], "17375": [1, 5], "20": [1, 5, 11, 23, 24, 25, 26, 27, 28, 29, 32, 33], "17376": [1, 5], "21": [1, 5], "17377": [1, 5], "22": [1, 5], "17378": [1, 5], "23": [1, 5, 25, 28, 33], "temp": [1, 5], "atemp": [1, 5, 10], "hum": [1, 5], "windspe": [1, 5], "cnt": [1, 5, 10], "24": [1, 5], "2879": [1, 5], "81": [1, 5], "0000": [1, 5], "16": [1, 5], "2727": [1, 5], "80": [1, 5], "40": [1, 5, 32, 33], "32": [1, 5], "75": [1, 5], "13": [1, 5, 13], "26": [1, 5], "2576": [1, 5], "60": [1, 5], "1642": [1, 5], "119": [1, 5], "89": [1, 5], "90": [1, 5], "56": [1, 5], "1343": [1, 5], "61": [1, 5], "65": [1, 5], "49": [1, 5], "17379": [1, 5], "row": [1, 5, 23], "x": [1, 5, 23, 24, 25, 27, 28, 32, 33], "column": [1, 5, 23], "ipython": [1, 5], "core": [1, 5], "displai": [1, 5, 23, 32, 33], "html": [1, 5], "object": [1, 5, 23, 24, 25, 26, 27, 28, 29, 32, 33], "valu": [1, 5, 23, 24, 25, 26, 27, 28, 29, 32, 33], "n": [1, 5, 23], "tabl": [1, 5, 12, 23], "class": [1, 5, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "ptabl": [1, 5], "stripe": [1, 5], "thead": [1, 5], "pthead": [1, 5], "tbodi": [1, 5], "ptbodi": [1, 5], "tr": [1, 5], "ptr": [1, 5], "td": [1, 5], "ptd": [1, 5], "exclud": [1, 5, 10, 12, 13, 23], "target": [1, 5, 23, 24, 25, 27, 28, 32, 33], "variabl": [1, 5, 12, 13, 23], "sampl": [1, 5, 10, 11, 23, 24, 25, 27, 28, 32, 33], "weight": [1, 5, 12, 23, 24, 25, 27, 28, 32, 33], "none": [1, 5, 23, 24, 25, 26, 27, 28, 29, 32, 33], "task": [1, 5, 16, 18, 23], "type": [1, 5, 23], "regress": [1, 5, 10, 11, 12, 16, 18, 23], "split": [1, 5, 8, 16, 18, 23], "method": [1, 5, 10, 14, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33], "random": [1, 5, 23, 27, 28, 32, 33], "test": [1, 5, 8, 9, 16, 18, 23, 24, 25, 27, 28, 32, 33], "ratio": [1, 5, 23, 32, 33], "state": [1, 5, 23], "vbox": [1, 5], "children": [1, 5], "hbox": [1, 5], "p": [1, 5], "layout": [1, 5], "width": [1, 5], "100px": [1, 5], "dropdown": [1, 5], "index": [1, 5, 23, 27, 28], "option": [1, 5, 10, 11, 23, 32, 33], "style": [1, 5, 23], "descriptionstyl": [1, 5], "description_width": [1, 5], "initi": [1, 5, 32, 33], "boundedfloattext": [1, 5], "auto": [1, 5, 27, 28], "max": [1, 5, 23], "step": [1, 5, 23], "01": [1, 5, 27, 28], "15": [1, 5, 13], "div": [1, 5], "margin": [1, 5, 23, 27, 28], "right": [1, 5], "10px": [1, 5], "seed": [1, 5, 23], "classif": [1, 5, 12, 13, 16, 18, 23, 24, 27, 32], "boundedinttext": [1, 5], "justify_cont": [1, 5], "flex": [1, 5], "end": [1, 5], "2px": [1, 5], "button": [1, 5, 12], "button_styl": [1, 5], "danger": [1, 5], "descript": [1, 5, 23], "updat": [1, 5, 24, 25, 26, 27, 28, 29, 32, 33], "height": [1, 5], "buttonstyl": [1, 5], "_dom_class": [1, 5], "pbtn": [1, 5], "space": [1, 5, 23], "between": [1, 5, 23], "100": [1, 5, 26, 27, 28, 29], "btn": [1, 5], "form": [1, 5, 24, 25, 26, 27, 28, 29, 32, 33], "divid": [1, 5], "output": [1, 5], "input": [1, 5, 25, 28, 33], "parent": [1, 5], "model_train": [1, 5, 10, 11, 12, 13, 23], "max_depth": [1, 24, 25], "n_estim": 1, "name": [1, 5, 12, 23, 24, 25, 26, 27, 28, 29, 32, 33], "model_diagnos": [1, 10, 11, 13, 23], "show": [1, 5, 12, 23, 27, 28], "resilience_perf": [1, 23], "immu_featur": [1, 23], "figsiz": [1, 5, 23], "notif": [1, 5], "info": [1, 5], "regist": [1, 5, 8, 10, 12, 13, 23], "done": [1, 5], "total": [1, 2, 5, 6, 25, 28, 33], "time": [1, 5, 23], "script": [1, 5], "minut": [1, 5], "424": [1, 2], "second": [1, 5], "python": [1, 3, 5, 18, 21], "sourc": [1, 3, 5], "plot_1_resili": [1, 2], "py": [1, 2, 5, 6], "jupyt": [1, 3, 5], "notebook": [1, 3, 5, 10, 11, 12, 13], "ipynb": [1, 5, 10, 11, 13], "galleri": [1, 3, 5], "gener": [1, 3, 4, 6, 18, 23, 25, 28, 29, 32, 33], "sphinx": [1, 3, 5], "00": [2, 6], "execut": [2, 6], "auto_examples_diagnost": 2, "file": [2, 6, 27, 28], "mb": [2, 6], "addit": [3, 4, 6, 18, 23, 29], "gam": [3, 4, 6, 18, 23, 29], "all": [3, 13, 23, 25, 27, 28, 33], "auto_examples_python": 3, "zip": 3, "auto_examples_jupyt": 3, "gamregressor": [5, 23], "model_interpret": [5, 10, 11, 13, 23], "global_effect_plot": [5, 23], "uni_featur": [5, 23], "955": [5, 6], "plot_0_gam": [5, 6], "auto_examples_model": 6, "welcom": 7, "scikit": [7, 23], "learn": [7, 10, 11, 12, 13, 14, 15, 18, 23, 32, 33], "instal": [7, 34], "api": [7, 18], "refer": [7, 12, 23], "user": 7, "interfac": [7, 18], "guid": [7, 22], "introduct": [7, 36], "process": [7, 23, 36], "interpret": [7, 9, 18, 23, 36], "ml": [7, 18, 23, 36], "post": [7, 10, 11, 13, 18, 23, 36], "hoc": [7, 10, 11, 13, 18, 23, 36], "explain": [7, 9, 18, 23, 36], "comparison": [7, 9, 23, 36], "low": [7, 9, 10, 11, 12, 13, 18, 23, 36], "workflow": [7, 23, 36], "case": [7, 36], "studi": [7, 36], "frequent": 7, "ask": 7, "question": 7, "how": [8, 10, 11, 12, 13], "can": [8, 11, 13, 21, 23, 25, 28, 33], "i": [8, 10, 11, 12, 13, 18, 22, 23, 24, 25, 27, 28, 32, 33], "read": 8, "my": 8, "own": 8, "frame": 8, "get": [8, 23, 24, 25, 26, 27, 28, 29, 32, 33], "predict": [8, 12, 16, 18, 23, 24, 25, 26, 27, 28, 32, 33], "custom": [8, 10, 11, 13], "chapter": 9, "includ": [9, 11, 13, 18, 21, 23, 27, 28], "multipl": [9, 14, 23], "experiment": [9, 20, 23], "load": [9, 15, 23, 27, 28], "prepar": [9, 15, 23], "intepret": 9, "outcom": [9, 18, 23], "benchmark": 9, "californiah": [9, 36], "taiwancredit": [9, 23, 36], "fair": [9, 16, 18, 23, 36], "simul": [9, 23, 36], "demonstr": [10, 11, 12, 13], "us": [10, 11, 12, 13, 18, 22, 23, 25, 28, 32, 33], "its": [10, 11, 12, 13], "mode": [10, 11, 12, 13, 23], "develop": [10, 11, 13, 18, 23], "machin": [10, 11, 12, 13, 14, 15, 18, 23], "uci": [10, 13, 23], "repositori": [10, 13], "which": [10, 11, 13, 23, 24, 27, 32], "consist": [10, 11, 13, 25, 28, 33], "17": 10, "389": 10, "hourli": 10, "count": 10, "rental": 10, "bike": [10, 23], "capit": 10, "system": 10, "see": [10, 11, 13], "detail": [10, 11, 13, 22], "The": [10, 11, 12, 13, 23, 24, 25, 26, 27, 28, 29, 32, 33], "respons": [10, 11, 12, 13, 23, 24, 25, 27, 28, 32, 33], "continu": [10, 11], "problem": [10, 11, 12, 13, 23], "link": [10, 11, 13], "googl": [10, 11, 13, 23], "colab": [10, 11, 13], "choos": [10, 11, 12, 13], "featur": [10, 11, 12, 13, 23, 24, 25, 27, 28, 32, 33], "one": [10, 12], "highli": 10, "correl": [10, 11], "other": [10, 13], "data_summari": [10, 11, 12, 13, 23], "dataset": [10, 11, 12, 13, 23, 32, 33], "default": [10, 11, 12, 13, 23, 24, 25, 26, 27, 28, 29, 32, 33], "set": [10, 11, 12, 13, 18, 23, 24, 25, 26, 27, 28, 29, 32, 33], "5": [10, 11, 23, 27, 28, 32, 33], "select": [10, 11, 12, 23, 27, 28], "lgbm": [10, 11], "rcit": [10, 11, 23], "condit": [10, 11, 23], "independ": [10, 11], "try": [10, 11], "top": [10, 11, 27, 28], "percentag": [10, 11], "98": [10, 11, 23], "feature_select": [10, 11, 23], "exploratori": [10, 11, 23], "analysi": [10, 11, 16, 18, 23], "check": [10, 11], "distribut": [10, 11, 16, 18, 21, 23], "eda": [10, 11, 13, 23], "7": [10, 11, 12], "": [10, 23, 24, 25, 26, 27, 28, 29, 32, 33], "need": [10, 21], "8": [10, 11, 12, 23], "specif": [10, 11, 13, 22, 23], "inher": [10, 11, 13, 18, 23], "main": [10, 11, 13, 27, 28], "effect": [10, 11, 13, 23, 27, 28], "pairwis": [10, 11, 13], "interact": [10, 11, 13, 18, 24, 25, 27, 28], "9": [10, 11, 12, 13, 23], "agnost": [10, 11, 13], "explan": [10, 11, 13, 14, 23, 27, 28], "global": [10, 18, 23, 27, 28], "pfi": [10, 18, 23], "pdp": [10, 11, 13, 18, 23], "al": [10, 11, 13, 18, 23], "local": [10, 18, 23, 27, 28], "lime": [10, 11, 13, 18, 23], "shap": [10, 11, 13, 18, 23], "model_explain": [10, 11, 13, 23], "10": [10, 11, 13, 23, 27, 28], "11": [10, 11, 13], "model_compar": [10, 11, 13, 23], "640": 11, "fetch": 11, "sklearn": [11, 23], "three": 11, "version": [11, 21, 25, 28, 33], "_raw": 11, "_trim1": 11, "trim": 11, "onli": [11, 13, 23, 27, 28], "aveoccup": [11, 23], "_trim2": 11, "averoom": [11, 23], "avebedrm": [11, 23], "popul": [11, 23], "medhousev": 11, "median": 11, "hous": [11, 23], "price": 11, "per": 11, "block": 11, "log": 11, "scale": [11, 23], "californiahousing_trim2": [11, 23], "first": [11, 12, 27, 28], "glm": [11, 18, 23], "relu": [11, 13, 18, 23, 27, 28], "dnn": [11, 13, 18, 23], "Then": [11, 12], "l1": [11, 18, 32, 33], "0005": 11, "reigster": 11, "permut": [11, 13, 23], "1d": [11, 13], "2d": [11, 13], "v": [11, 13, 23, 25, 28, 33], "solassimu1": [12, 23], "modifi": [12, 23], "friedman": [12, 23], "covari": [12, 16, 18, 23], "ar": [12, 23, 24, 25, 26, 27, 28, 29, 32, 33], "segment": [12, 16, 18, 23], "x1": [12, 23], "x2": [12, 23], "x5": [12, 23], "label": [12, 23, 24, 25, 27, 28, 32, 33], "binari": [12, 13, 16, 18, 23, 24, 25], "rest": [12, 23], "demograph": [12, 23], "contribut": [12, 23], "sola": [12, 16, 18, 23], "ai": [12, 16, 18, 23], "minor": 12, "major": 12, "ag": 12, "62": 12, "grei": 12, "color": 12, "xgb2": [12, 18, 23], "when": [12, 25, 28, 32, 33], "finish": 12, "sai": 12, "In": [12, 24, 27, 32], "group": [12, 23], "panel": 12, "add": [12, 23], "categori": [12, 23], "enter": 12, "race": 12, "protect": [12, 23], "switch": 12, "metric": [12, 16, 18, 23, 24, 27, 32], "air": [12, 23], "threshold": [12, 23, 32, 33], "cut": [12, 23], "favor": [12, 23], "unfavor": 12, "number": [12, 23, 25, 27, 28, 32, 33], "bin": [12, 23], "numer": [12, 23], "otherwis": [12, 23], "automat": 12, "model_fair": [12, 23], "30": 13, "000": 13, "credit": [13, 23], "card": [13, 23], "client": [13, 23], "taiwan": 13, "200504": 13, "200509": 13, "subject": 13, "slight": 13, "preprocess": [13, 15, 23], "flagdefault": 13, "payment": 13, "histori": 13, "attribut": 13, "pay_1": 13, "bill_amt1": 13, "pay_amt1": 13, "keep": [13, 25, 28, 33], "while": 13, "ebm": [13, 18, 23], "l1_regular": 13, "0008": 13, "each": [13, 23, 24, 25, 26, 27, 28, 29, 32, 33], "14": 13, "compar": [14, 23], "differ": [14, 16, 18, 23], "result": [14, 23], "summar": [15, 23], "accuraci": [16, 18, 23, 24, 27, 32], "popular": [16, 18], "like": [16, 18, 23, 24, 25, 27, 28, 32, 33], "mse": [16, 18, 23], "mae": [16, 18], "acc": [16, 18], "auc": [16, 18, 23], "recal": [16, 18, 23], "precis": [16, 18, 23], "f1": [16, 18], "score": [16, 18, 23, 24, 25, 26, 27, 28, 29, 32, 33], "dispar": [16, 18, 23], "integr": [16, 18], "packag": [16, 18], "weakspot": [16, 18, 23], "identif": [16, 18], "weak": [16, 18], "region": [16, 18, 23], "high": [16, 18, 23], "residu": [16, 18, 23, 25, 28, 33], "slice": [16, 18, 23], "techniqu": [16, 18], "overfit": [16, 18, 23], "accord": [16, 18, 23], "gap": [16, 18, 23], "reliabl": [16, 18, 23], "assess": [16, 18], "uncertainti": [16, 18], "conform": [16, 18, 23], "robust": [16, 18, 23], "evalu": [16, 18, 23], "degrad": [16, 18, 23], "under": [16, 18, 23, 24, 25], "nois": [16, 18, 23], "perturb": [16, 18, 23], "out": [16, 18, 32, 33], "scenario": [16, 18], "\u03c0": 18, "\u02c8pa\u026a": 18, "\u02c8em": 18, "\u02c8el": 18, "new": 18, "toolbox": 18, "valid": [18, 32, 33], "through": [18, 23], "support": [18, 21, 23], "grow": 18, "list": [18, 23, 25, 28, 32, 33], "linear": [18, 23], "logist": 18, "l2": 18, "regular": [18, 27, 28, 32, 33], "b": 18, "spline": 18, "tree": [18, 23, 24, 25], "decis": [18, 23], "fig": [18, 23, 24, 25], "fast": [18, 23], "greedi": [18, 23], "sum": [18, 23, 25, 28, 33], "tan": 18, "et": 18, "2022": 18, "extrem": 18, "gradient": 18, "boost": [18, 23], "depth": [18, 23, 24, 25], "chen": 18, "guestrin": 18, "2016": 18, "lengerich": 18, "2020": 18, "nori": 18, "2019": 18, "lou": 18, "2013": 18, "gami": [18, 23], "net": [18, 23], "structur": 18, "yang": 18, "zhang": 18, "sudjianto": 18, "2021": 18, "deep": [18, 23, 24, 25, 26, 27, 28, 29, 32, 33], "network": [18, 27, 28], "aletheia": 18, "unwrapp": 18, "sparsif": 18, "also": [18, 27, 28], "work": [18, 23, 24, 25, 26, 27, 28, 29, 32, 33], "arbitrari": [18, 23], "supervis": 18, "It": [18, 32, 33], "whole": 18, "spectrum": 18, "limit": 18, "follow": [18, 21, 23], "current": 21, "variou": 21, "o": 21, "platform": [21, 23], "py37": 21, "py38": 21, "py39": 21, "win": 21, "linux": 21, "maco": 21, "you": [21, 23, 24, 27, 32], "directli": [21, 23], "environ": 21, "pip": 21, "If": [21, 23, 24, 25, 26, 27, 28, 29, 32, 33], "got": 21, "error": [21, 23], "messag": 21, "could": 21, "find": 21, "satisfi": [21, 27, 28], "requir": [21, 23, 24, 27, 32, 33], "No": [21, 32, 33], "match": 21, "found": 21, "mai": [21, 22, 25, 28, 33], "upgrad": 21, "function": [22, 23], "pleas": 22, "further": 22, "raw": [22, 23, 24, 27, 28, 32, 33], "enough": 22, "give": 22, "guidelin": 22, "For": [22, 23, 25, 28, 33], "concept": 22, "repeat": [22, 23], "across": 22, "manag": 23, "paramet": [23, 24, 25, 26, 27, 28, 29, 32, 33], "str": [23, 27, 28, 32, 33], "depreci": 23, "union": 23, "datafram": 23, "pass": 23, "program": 23, "pd": 23, "demo": [23, 27, 28], "cocircl": 23, "gaussian": 23, "spheric": 23, "boundari": 23, "http": 23, "archiv": 23, "ic": 23, "edu": 23, "share": 23, "californiahousing_raw": 23, "com": 23, "crash": 23, "cours": 23, "california": 23, "californiahousing_trim1": 23, "trime": 23, "upper": 23, "quantil": 23, "A": [23, 25, 28, 32, 33], "github": 23, "solasai": 23, "solashmda": 23, "2018": 23, "home": 23, "mortgag": 23, "disclosur": 23, "act": 23, "hmda": 23, "inform": 23, "about": 23, "nearli": 23, "everi": 23, "applic": 23, "unit": 23, "point": 23, "unicod": 23, "sample_weight": [23, 24, 25, 27, 28, 32, 33], "test_ratio": 23, "float": [23, 24, 25, 27, 28, 32, 33], "random_st": [23, 24, 25, 27, 28, 32, 33], "int": [23, 27, 28, 32, 33], "task_typ": 23, "with_displai": 23, "bool": [23, 24, 25, 26, 27, 28, 29, 32, 33], "train_idx": 23, "test_idx": 23, "up": 23, "y": [23, 24, 25, 27, 28, 32, 33], "true": [23, 24, 25, 26, 27, 28, 29, 32, 33], "summari": 23, "arrai": [23, 24, 25, 27, 28, 32, 33], "shape": [23, 24, 25, 27, 28, 32, 33], "n_samples_train": 23, "specifi": 23, "n_samples_test": 23, "feature_typ": [23, 26, 27, 28, 29], "dict": [23, 24, 25, 26, 27, 28, 29, 32, 33], "feature_exclud": 23, "basic": 23, "statist": 23, "categor": 23, "bi_featur": 23, "multi_typ": 23, "tupl": [23, 32, 33], "univari": 23, "bivari": 23, "multivari": 23, "plot": [23, 27, 28], "figur": 23, "size": [23, 27, 28, 32, 33], "alpha": 23, "most": 23, "normal": [23, 27, 28], "exce": 23, "obtain": 23, "lightgbm": 23, "1e": [23, 32, 33], "get_data": 23, "fals": [23, 27, 28, 32, 33], "after": [23, 27, 28], "ndarrai": [23, 24, 25, 27, 28, 32, 33], "n_sampl": [23, 24, 25, 27, 28, 32, 33], "n_featur": [23, 24, 25, 27, 28, 32, 33], "self": [23, 24, 25, 26, 27, 28, 29, 32, 33], "whether": [23, 27, 28, 32, 33], "return": [23, 24, 25, 26, 27, 28, 29, 32, 33], "get_feature_nam": 23, "feature_nam": [23, 26, 27, 28, 29], "get_feature_typ": 23, "get_model": 23, "modelpipelin": 23, "pipelin": [23, 24, 25, 26, 27, 28, 29, 32, 33], "wrapper": 23, "estim": [23, 24, 25, 26, 27, 28, 29, 32, 33], "get_model_config": 23, "config": 23, "get_raw_data": 23, "train_x": 23, "train_i": 23, "train_sample_weight": 23, "test_x": 23, "test_i": 23, "test_sample_weight": 23, "target_nam": 23, "get_target_nam": 23, "make_pipelin": 23, "normalize_strategi": 23, "encode_strategi": 23, "excluded_featur": 23, "fit": [23, 24, 25, 26, 27, 28, 29, 32, 33], "should": 23, "minmax": 23, "unit_norm": 23, "strategi": 23, "ordin": 23, "one_hot": 23, "encod": 23, "xndarrai": 23, "empti": [23, 27, 28], "determin": [23, 25, 28, 32, 33], "sever": 23, "perturb_featur": 23, "perturb_method": 23, "resilience_method": 23, "perturb_s": 23, "psi_bucket": 23, "n_cluster": 23, "target_featur": 23, "threshold_ratio": 23, "original_scal": 23, "tool": 23, "accuracy_ms": 23, "accuracy_r2": 23, "r": [23, 25, 27, 28, 33], "squar": [23, 25, 28, 33], "regressor": [23, 25, 28, 33], "accuracy_acc": 23, "classfier": 23, "accuracy_auc": 23, "measur": 23, "overfit_perf": 23, "robustness_perf": 23, "robustness_perf_worst": 23, "base": 23, "worst": 23, "worstcas": 23, "subsampl": 23, "resilience_psi": 23, "psi": 23, "exchang": 23, "assumpt": 23, "reliability_bandwidth": 23, "bandwidth": 23, "reliability_coverag": 23, "coverag": 23, "immut": 23, "common": 23, "decid": 23, "strength": 23, "metho": 23, "uniform": 23, "hard": [23, 32, 33], "outer": 23, "cluster": 23, "loss": [23, 27, 28, 32, 33], "relat": 23, "distinguish": 23, "easi": 23, "same": 23, "euclidean": 23, "distanc": 23, "mean": [23, 24, 25, 27, 28, 32, 33], "surrog": 23, "k": 23, "rate": [23, 32, 33], "length": 23, "resilience_shift_dens": 23, "resilience_shift_histogram": 23, "reliability_margin": 23, "reliability_psi": 23, "accuracy_residu": 23, "usual": 23, "axi": [23, 27, 28], "histogram": 23, "wai": 23, "equal": 23, "origin": 23, "slice_featur": 23, "slice_method": 23, "min_sampl": 23, "use_test": 23, "return_data": 23, "return_fig": 23, "accuracy_plot": 23, "accuracy_result": 23, "overfit_plot": 23, "overfit_result": 23, "weakspot_plot": 23, "weakspot_result": 23, "reliability_result": 23, "reliability_perf": 23, "reliability_calibr": 23, "param": [23, 24, 25, 26, 27, 28, 29, 32, 33], "respect": 23, "classifi": 23, "confus": 23, "matrix": [23, 24, 25, 28, 33], "roc": 23, "weaksot": 23, "detect": 23, "identifi": 23, "calcul": 23, "stabil": 23, "un": 23, "against": 23, "given": [23, 24, 27, 28, 32], "empir": 23, "averag": 23, "brier": 23, "diagram": 23, "calibr": 23, "probabl": [23, 24, 27, 32, 33], "densiti": [23, 27, 28], "shift": 23, "standard": 23, "deviat": 23, "ha": 23, "min": 23, "an": 23, "insid": 23, "outsid": 23, "whther": 23, "sample_id": 23, "sample_s": 23, "n_repeat": 23, "pdp_size": 23, "center": [23, 27, 28], "appli": 23, "correspond": 23, "global_pfi": 23, "global_pdp": 23, "partial": [23, 27, 28], "depend": 23, "global_ic": 23, "individu": 23, "global_al": 23, "accumul": 23, "global_shap_summari": 23, "global_shap_fi": 23, "global_shap_scatt": 23, "scatter": 23, "contain": [23, 24, 25, 26, 27, 28, 29, 32, 33], "local_shap": 23, "singl": 23, "local_lim": 23, "500": [23, 32, 33], "2000": 23, "local_fi": 23, "make": 23, "re": 23, "favorable_class": 23, "segmented_featur": 23, "group_categori": 23, "reference_group": 23, "protected_group": 23, "favorable_threshold": 23, "metric_threshold": 23, "thresholding_bin": 23, "segmented_bin": 23, "performance_metr": 23, "by_weight": 23, "team": 23, "feature_remov": 23, "bi": 23, "off": 23, "remov": 23, "retrain": 23, "smd": 23, "fpr": 23, "fnr": 23, "advers": 23, "impact": 23, "posit": 23, "neg": [23, 25, 28, 33], "segement": 23, "line": 23, "num": 23, "model_fairness_sola": 23, "rsmd": 23, "odd": 23, "tree_idx": 23, "root": 23, "global_fi": 23, "global_ei": 23, "local_ei": 23, "glm_coef": 23, "coeffici": [23, 25, 28, 33], "tree_glob": 23, "tree_loc": 23, "llm_summari": 23, "llm": 23, "llm_violin": 23, "violin": 23, "llm_pc": 23, "parallel": 23, "coordin": 23, "adapt": 23, "note": [23, 25, 28, 33], "As": [23, 27, 28], "categorical_feature_nam": 23, "call": [23, 25, 28, 33], "glmregressor": 23, "glmclassifi": 23, "gamclassifi": 23, "pidecisiontreeregressor": 23, "pidecisiontreeclassifi": 23, "figsregressor": 23, "figsclassifi": 23, "explainableboostingregressor": 23, "explainableboostingclassifi": 23, "pixgbregressor": 23, "pixgbclassifi": 23, "gaminetregressor": 23, "gaminetclassifi": 23, "reludnnregressor": 23, "reludnnclassifi": 23, "registr": 23, "get_all_supported_model": 23, "model_tun": 23, "tune": [23, 27, 28], "twosample_test": 23, "bucket": 23, "two": 23, "string": 23, "would": [23, 25, 27, 28, 33], "indic": 23, "max_it": [24, 25, 26, 29], "splitter": [24, 25], "best": [24, 25, 28, 33], "min_samples_leaf": [24, 25], "min_impurity_decreas": [24, 25], "learning_r": [24, 25, 27, 28, 32, 33], "explain_tre": [24, 25], "get_tree_diag": [24, 25], "get_tree_heatmap": [24, 25], "global_explain": [24, 25, 26, 27, 28, 29], "global_interpret": [24, 25, 26, 27, 28, 29], "interpret_local_tre": [24, 25], "local_explain": [24, 25], "plot_feature_importance_heatmap": [24, 25], "plot_local_tre": [24, 25], "plot_tree_diag": [24, 25], "decision_funct": [24, 26, 27, 32], "numpi": [24, 25, 27, 28, 32, 33], "np": [24, 25, 27, 28, 32, 33], "get_binary_matrix": [24, 25], "represent": [24, 25], "stack": [24, 25], "togeth": [24, 25, 27, 28], "get_binary_represent": [24, 25], "get_depth": [24, 25], "get_depths_interact": [24, 25], "get_param": [24, 25, 26, 27, 28, 29, 32, 33], "subobject": [24, 25, 26, 27, 28, 29, 32, 33], "map": [24, 25, 26, 27, 28, 29, 32, 33], "pred": [24, 25, 27, 28, 32, 33], "predict_proba": [24, 26, 27, 32], "pred_proba": [24, 27, 32], "proba": [24, 27], "multi": [24, 27, 32], "subset": [24, 27, 32], "harsh": [24, 27, 32], "sinc": [24, 27, 32], "correctli": [24, 27, 32], "n_output": [24, 25, 27, 28, 32, 33], "wrt": [24, 25, 27, 28, 32, 33], "set_param": [24, 25, 26, 27, 28, 29, 31, 32, 33], "simpl": [24, 25, 26, 27, 28, 29, 32, 33], "well": [24, 25, 26, 27, 28, 29, 32, 33], "nest": [24, 25, 26, 27, 28, 29, 32, 33], "latter": [24, 25, 26, 27, 28, 29, 32, 33], "have": [24, 25, 26, 27, 28, 29, 32, 33], "compon": [24, 25, 26, 27, 28, 29, 32, 33], "__": [24, 25, 26, 27, 28, 29, 32, 33], "so": [24, 25, 26, 27, 28, 29, 32, 33], "possibl": [24, 25, 26, 27, 28, 29, 32, 33], "instanc": [24, 25, 26, 27, 28, 29, 32, 33], "defin": [25, 28, 33], "frac": [25, 28, 33], "u": [25, 28, 33], "where": [25, 28, 33], "y_true": [25, 28, 33], "y_pred": [25, 28, 33], "becaus": [25, 28, 33], "arbitrarili": [25, 28, 33], "wors": [25, 28, 33], "constant": [25, 28, 33], "alwai": [25, 28, 33], "expect": [25, 28, 33], "disregard": [25, 28, 33], "some": [25, 27, 28, 33], "precomput": [25, 28, 33], "kernel": [25, 28, 33], "instead": [25, 28, 33], "n_samples_fit": [25, 28, 33], "multioutput": [25, 28, 33], "uniform_averag": [25, 28, 33], "r2_score": [25, 28, 33], "influenc": [25, 28, 33], "except": [25, 28, 33], "multioutputregressor": [25, 28, 33], "term": 26, "spline_ord": [26, 29], "n_spline": [26, 29], "lam": [26, 29], "get_main_effect": [26, 27, 28, 29], "interpret_fi": [26, 27, 28, 29], "interpret_local_fi": [26, 27, 28, 29], "local_feature_explain": [26, 27, 28, 29], "plot_ei": [26, 27, 28, 29], "plot_fi": [26, 27, 28, 29], "plot_fi_loc": [26, 27, 28, 29], "plot_main_effect": [26, 27, 28, 29], "interact_num": [27, 28], "subnet_size_main_effect": [27, 28], "subnet_size_interact": [27, 28], "activation_func": [27, 28], "max_epoch": [27, 28, 32, 33], "1000": [27, 28, 32, 33], "001": [27, 28, 32, 33], "0001": [27, 28], "early_stop_thr": [27, 28], "batch_siz": [27, 28, 32, 33], "batch_size_infer": [27, 28, 32, 33], "10000": [27, 28, 32, 33], "max_iter_per_epoch": [27, 28], "val_ratio": [27, 28, 32, 33], "warm_start": [27, 28], "gam_sample_s": [27, 28], "5000": [27, 28], "mlp_sample_s": [27, 28], "hered": [27, 28], "reg_clar": [27, 28], "loss_threshold": [27, 28], "reg_mono": [27, 28], "mono_increasing_list": [27, 28], "mono_decreasing_list": [27, 28], "mono_sample_s": [27, 28], "include_interaction_list": [27, 28], "boundary_clip": [27, 28], "verbos": [27, 28, 32, 33], "n_job": [27, 28], "devic": [27, 28, 32, 33], "cpu": [27, 28, 32, 33], "get_interaction_effect": [27, 28], "interpret_ei": [27, 28], "interpret_local_effect": [27, 28], "plot_ei_loc": [27, 28], "plot_interaction_effect": [27, 28], "certify_mono": [27, 28], "certifi": [27, 28], "monoton": [27, 28], "constraint": [27, 28], "mono_statu": [27, 28], "boolean": [27, 28, 32, 33], "main_effect": [27, 28], "befor": [27, 32, 33], "softmax": [27, 32, 33], "fine_tune_select": [27, 28], "main_effect_list": [27, 28], "interaction_list": [27, 28], "lr": [27, 28], "fine": [27, 28], "unselect": [27, 28], "prune": [27, 28], "clariti": [27, 28], "trigger": [27, 28], "penal": [27, 28], "subnetwork": [27, 28], "impos": [27, 28, 32, 33], "norm": [27, 28], "get_aggregate_output": [27, 28], "get_clarity_loss": [27, 28], "clarity_loss": [27, 28], "get_effect_import": [27, 28], "extract": [27, 28], "get_feature_import": [27, 28], "get_interaction_raw_output": [27, 28], "n_interact": [27, 28], "get_main_effect_raw_output": [27, 28], "get_mono_loss": [27, 28], "mono_loss": [27, 28], "main_grid_s": [27, 28], "interact_grid_s": [27, 28], "grid": [27, 28], "folder": [27, 28], "disk": [27, 28], "path": [27, 28], "local_effect_explain": [27, 28], "partial_deriv": [27, 28], "order": [27, 28], "deriv": [27, 28], "w": [27, 28], "t": [27, 28, 32, 33], "plote": [27, 28], "save": [27, 28], "show_effect_import": [27, 28], "xlabel_rot": [27, 28], "visual": [27, 28], "rotat": [27, 28], "angl": [27, 28], "show_feature_import": [27, 28], "show_global_explain": [27, 28], "kei": [27, 28], "main_effect_num": [27, 28], "interaction_num": [27, 28], "shown": [27, 28], "show_local_effect_explain": [27, 28], "show_local_feature_explain": [27, 28], "show_loss_trajectori": [27, 28], "trajectori": [27, 28], "show_regularization_path": [27, 28], "arg": [30, 31], "kwarg": [30, 31], "l1_regularz": 31, "l2_regularz": 31, "hidden_layer_s": [32, 33], "dropout_prob": [32, 33], "l1_reg": [32, 33], "05": [32, 33], "n_epoch_no_chang": [32, 33], "iht": [32, 33], "phase_epoch": [32, 33], "50": [32, 33], "hidden": [32, 33], "layer": [32, 33], "dropout": [32, 33], "epoch": [32, 33], "batch": [32, 33], "infer": [32, 33], "stage": [32, 33], "avoid": [32, 33], "memori": [32, 33], "issu": [32, 33], "deal": [32, 33], "veri": [32, 33], "larg": [32, 33], "lambda": [32, 33], "earli": [32, 33], "stop": [32, 33], "doesn": [32, 33], "improv": [32, 33], "last": [32, 33], "early_stop": [32, 33], "iter": [32, 33], "phase": [32, 33], "comput": [32, 33], "cuda": [32, 33], "statit": [32, 33], "bia": [32, 33], "reludnn": [32, 33], "get_raw_output": [32, 33], "funciton": [32, 33]}, "objects": {"piml.api": [[23, 0, 1, "", "Experiment"]], "piml.api.Experiment": [[23, 1, 1, "", "data_loader"], [23, 1, 1, "", "data_prepare"], [23, 1, 1, "", "data_summary"], [23, 1, 1, "", "eda"], [23, 1, 1, "", "feature_select"], [23, 1, 1, "", "get_data"], [23, 1, 1, "", "get_feature_names"], [23, 1, 1, "", "get_feature_types"], [23, 1, 1, "", "get_model"], [23, 1, 1, "", "get_model_config"], [23, 1, 1, "", "get_raw_data"], [23, 1, 1, "", "get_target_name"], [23, 1, 1, "", "make_pipeline"], [23, 1, 1, "", "model_compare"], [23, 1, 1, "", "model_diagnose"], [23, 1, 1, "", "model_explain"], [23, 1, 1, "", "model_fairness"], [23, 1, 1, "", "model_fairness_solas"], [23, 1, 1, "", "model_interpret"], [23, 1, 1, "", "model_train"], [23, 1, 1, "", "model_tune"], [23, 1, 1, "", "register"], [23, 1, 1, "", "twosample_test"]], "piml.models": [[24, 0, 1, "", "FIGSClassifier"], [25, 0, 1, "", "FIGSRegressor"], [26, 0, 1, "", "GAMClassifier"], [27, 0, 1, "", "GAMINetClassifier"], [28, 0, 1, "", "GAMINetRegressor"], [29, 0, 1, "", "GAMRegressor"], [30, 0, 1, "", "GLMClassifier"], [31, 0, 1, "", "GLMRegressor"], [32, 0, 1, "", "ReluDNNClassifier"], [33, 0, 1, "", "ReluDNNRegressor"]], "piml.models.FIGSClassifier": [[24, 1, 1, "", "decision_function"], [24, 1, 1, "", "fit"], [24, 1, 1, "", "get_binary_matrix"], [24, 1, 1, "", "get_binary_representation"], [24, 1, 1, "", "get_depths"], [24, 1, 1, "", "get_depths_interactions"], [24, 1, 1, "", "get_params"], [24, 1, 1, "", "predict"], [24, 1, 1, "", "predict_proba"], [24, 1, 1, "", "score"], [24, 1, 1, "", "set_params"]], "piml.models.FIGSRegressor": [[25, 1, 1, "", "fit"], [25, 1, 1, "", "get_binary_matrix"], [25, 1, 1, "", "get_binary_representation"], [25, 1, 1, "", "get_depths"], [25, 1, 1, "", "get_depths_interactions"], [25, 1, 1, "", "get_params"], [25, 1, 1, "", "predict"], [25, 1, 1, "", "score"], [25, 1, 1, "", "set_params"]], "piml.models.GAMClassifier": [[26, 1, 1, "", "get_params"], [26, 1, 1, "", "set_params"]], "piml.models.GAMINetClassifier": [[27, 1, 1, "", "certify_mono"], [27, 1, 1, "", "decision_function"], [27, 1, 1, "", "fine_tune_selected"], [27, 1, 1, "", "fit"], [27, 1, 1, "", "get_aggregate_output"], [27, 1, 1, "", "get_clarity_loss"], [27, 1, 1, "", "get_effect_importance"], [27, 1, 1, "", "get_feature_importance"], [27, 1, 1, "", "get_interaction_raw_output"], [27, 1, 1, "", "get_main_effect_raw_output"], [27, 1, 1, "", "get_mono_loss"], [27, 1, 1, "", "get_params"], [27, 1, 1, "", "global_explain"], [27, 1, 1, "", "load"], [27, 1, 1, "", "local_effect_explain"], [27, 1, 1, "", "local_feature_explain"], [27, 1, 1, "", "partial_derivatives"], [27, 1, 1, "", "predict"], [27, 1, 1, "", "predict_proba"], [27, 1, 1, "", "save"], [27, 1, 1, "", "score"], [27, 1, 1, "", "set_params"], [27, 1, 1, "", "show_effect_importance"], [27, 1, 1, "", "show_feature_importance"], [27, 1, 1, "", "show_global_explain"], [27, 1, 1, "", "show_local_effect_explain"], [27, 1, 1, "", "show_local_feature_explain"], [27, 1, 1, "", "show_loss_trajectory"], [27, 1, 1, "", "show_regularization_path"]], "piml.models.GAMINetRegressor": [[28, 1, 1, "", "certify_mono"], [28, 1, 1, "", "fine_tune_selected"], [28, 1, 1, "", "fit"], [28, 1, 1, "", "get_aggregate_output"], [28, 1, 1, "", "get_clarity_loss"], [28, 1, 1, "", "get_effect_importance"], [28, 1, 1, "", "get_feature_importance"], [28, 1, 1, "", "get_interaction_raw_output"], [28, 1, 1, "", "get_main_effect_raw_output"], [28, 1, 1, "", "get_mono_loss"], [28, 1, 1, "", "get_params"], [28, 1, 1, "", "global_explain"], [28, 1, 1, "", "load"], [28, 1, 1, "", "local_effect_explain"], [28, 1, 1, "", "local_feature_explain"], [28, 1, 1, "", "partial_derivatives"], [28, 1, 1, "", "predict"], [28, 1, 1, "", "save"], [28, 1, 1, "", "score"], [28, 1, 1, "", "set_params"], [28, 1, 1, "", "show_effect_importance"], [28, 1, 1, "", "show_feature_importance"], [28, 1, 1, "", "show_global_explain"], [28, 1, 1, "", "show_local_effect_explain"], [28, 1, 1, "", "show_local_feature_explain"], [28, 1, 1, "", "show_loss_trajectory"], [28, 1, 1, "", "show_regularization_path"]], "piml.models.GAMRegressor": [[29, 1, 1, "", "get_params"], [29, 1, 1, "", "set_params"]], "piml.models.ReluDNNClassifier": [[32, 1, 1, "", "decision_function"], [32, 1, 1, "", "fit"], [32, 1, 1, "", "get_params"], [32, 1, 1, "", "get_raw_output"], [32, 1, 1, "", "predict"], [32, 1, 1, "", "predict_proba"], [32, 1, 1, "", "score"], [32, 1, 1, "", "set_params"]], "piml.models.ReluDNNRegressor": [[33, 1, 1, "", "fit"], [33, 1, 1, "", "get_params"], [33, 1, 1, "", "get_raw_output"], [33, 1, 1, "", "predict"], [33, 1, 1, "", "score"], [33, 1, 1, "", "set_params"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"model": [0, 3, 4, 5, 10, 11, 13, 14, 16, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "diagnost": [0, 3, 10, 11, 13, 16], "resili": 1, "perform": 1, "xgb": 1, "comput": [2, 6], "time": [2, 6], "exampl": [3, 29], "interpret": [3, 4, 10, 11, 13, 19], "ml": [3, 4, 19], "gener": 5, "addit": 5, "gam": 5, "tabl": 7, "Of": 7, "content": 7, "frequent": 8, "ask": 8, "question": 8, "case": 9, "studi": [9, 12], "bikeshar": 10, "data": [10, 11, 12, 13, 15], "load": [10, 11, 12, 13], "prepar": [10, 11, 12, 13], "train": [10, 11, 13], "intepret": [10, 11, 13], "explain": [10, 11, 13, 17], "outcom": [10, 11, 13], "test": [10, 11, 12, 13], "comparison": [10, 11, 13, 14], "benchmark": [10, 11, 13], "californiah": 11, "fair": 12, "simul": 12, "taiwancredit": 13, "process": 15, "post": 17, "hoc": 17, "introduct": 18, "low": 20, "code": 20, "workflow": 20, "instal": 21, "piml": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "api": [22, 23], "refer": 22, "user": [22, 36], "interfac": 22, "experi": 23, "figsclassifi": 24, "figsregressor": 25, "gamclassifi": 26, "gaminetclassifi": 27, "gaminetregressor": 28, "gamregressor": 29, "us": 29, "glmclassifi": 30, "glmregressor": 31, "reludnnclassifi": 32, "reludnnregressor": 33, "welcom": 34, "scikit": 34, "learn": 34, "guid": 36}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Model Diagnostics": [[0, "model-diagnostics"], [3, "model-diagnostics"], [16, "model-diagnostics"]], "Resilience - Performance: XGB": [[1, "resilience-performance-xgb"]], "Computation times": [[2, "computation-times"], [6, "computation-times"]], "Examples": [[3, "examples"]], "Interpretable ML Models": [[3, "interpretable-ml-models"], [4, "interpretable-ml-models"], [19, "interpretable-ml-models"]], "Generalized additive model (GAM)": [[5, "generalized-additive-model-gam"]], "Table Of Contents": [[7, "table-of-contents"]], "Frequently Asked Questions": [[8, "frequently-asked-questions"]], "Case Studies": [[9, "case-studies"]], "BikeSharing Data": [[10, "BikeSharing-Data"]], "Load and Prepare Data": [[10, "Load-and-Prepare-Data"], [11, "Load-and-Prepare-Data"], [12, "Load-and-Prepare-Data"], [13, "Load-and-Prepare-Data"]], "Train Intepretable Models": [[10, "Train-Intepretable-Models"], [11, "Train-Intepretable-Models"], [13, "Train-Intepretable-Models"]], "Interpretability and Explainability": [[10, "Interpretability-and-Explainability"], [11, "Interpretability-and-Explainability"], [13, "Interpretability-and-Explainability"]], "Model Diagnostics and Outcome Testing": [[10, "Model-Diagnostics-and-Outcome-Testing"], [11, "Model-Diagnostics-and-Outcome-Testing"], [13, "Model-Diagnostics-and-Outcome-Testing"]], "Model Comparison and Benchmarking": [[10, "Model-Comparison-and-Benchmarking"], [11, "Model-Comparison-and-Benchmarking"], [13, "Model-Comparison-and-Benchmarking"]], "CaliforniaHousing Data": [[11, "CaliforniaHousing-Data"]], "Fairness Simulation Study": [[12, "Fairness-Simulation-Study"]], "Fairness Testing": [[12, "Fairness-Testing"]], "TaiwanCredit Data": [[13, "TaiwanCredit-Data"]], "Model Comparison": [[14, "model-comparison"]], "Data Processing": [[15, "data-processing"]], "Post-hoc Explainability": [[17, "post-hoc-explainability"]], "Introduction": [[18, "introduction"]], "Low-Code Workflow": [[20, "low-code-workflow"]], "Installing PiML": [[21, "installing-piml"]], "API Reference": [[22, "api-reference"]], "piml.api: User interface": [[22, "piml-api-user-interface"]], "piml.api.Experiment": [[23, "piml-api-experiment"]], "piml.models.FIGSClassifier": [[24, "piml-models-figsclassifier"]], "piml.models.FIGSRegressor": [[25, "piml-models-figsregressor"]], "piml.models.GAMClassifier": [[26, "piml-models-gamclassifier"]], "piml.models.GAMINetClassifier": [[27, "piml-models-gaminetclassifier"]], "piml.models.GAMINetRegressor": [[28, "piml-models-gaminetregressor"]], "piml.models.GAMRegressor": [[29, "piml-models-gamregressor"]], "Examples using piml.models.GAMRegressor": [[29, "examples-using-piml-models-gamregressor"]], "piml.models.GLMClassifier": [[30, "piml-models-glmclassifier"]], "piml.models.GLMRegressor": [[31, "piml-models-glmregressor"]], "piml.models.ReluDNNClassifier": [[32, "piml-models-reludnnclassifier"]], "piml.models.ReluDNNRegressor": [[33, "piml-models-reludnnregressor"]], "Welcome to scikit-learn": [[34, "welcome-to-scikit-learn"]], "User Guide": [[36, "user-guide"]]}, "indexentries": {"experiment (class in piml.api)": [[23, "piml.api.Experiment"]], "data_loader() (piml.api.experiment method)": [[23, "piml.api.Experiment.data_loader"]], "data_prepare() (piml.api.experiment method)": [[23, "piml.api.Experiment.data_prepare"]], "data_summary() (piml.api.experiment method)": [[23, "piml.api.Experiment.data_summary"]], "eda() (piml.api.experiment method)": [[23, "piml.api.Experiment.eda"]], "feature_select() (piml.api.experiment method)": [[23, "piml.api.Experiment.feature_select"]], "get_data() (piml.api.experiment method)": [[23, "piml.api.Experiment.get_data"]], "get_feature_names() (piml.api.experiment method)": [[23, "piml.api.Experiment.get_feature_names"]], "get_feature_types() (piml.api.experiment method)": [[23, "piml.api.Experiment.get_feature_types"]], "get_model() (piml.api.experiment method)": [[23, "piml.api.Experiment.get_model"]], "get_model_config() (piml.api.experiment method)": [[23, "piml.api.Experiment.get_model_config"]], "get_raw_data() (piml.api.experiment method)": [[23, "piml.api.Experiment.get_raw_data"]], "get_target_name() (piml.api.experiment method)": [[23, "piml.api.Experiment.get_target_name"]], "make_pipeline() (piml.api.experiment method)": [[23, "piml.api.Experiment.make_pipeline"]], "model_compare() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_compare"]], "model_diagnose() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_diagnose"]], "model_explain() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_explain"]], "model_fairness() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_fairness"]], "model_fairness_solas() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_fairness_solas"]], "model_interpret() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_interpret"]], "model_train() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_train"]], "model_tune() (piml.api.experiment method)": [[23, "piml.api.Experiment.model_tune"]], "register() (piml.api.experiment method)": [[23, "piml.api.Experiment.register"]], "twosample_test() (piml.api.experiment method)": [[23, "piml.api.Experiment.twosample_test"]], "figsclassifier (class in piml.models)": [[24, "piml.models.FIGSClassifier"]], "decision_function() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.decision_function"]], "fit() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.fit"]], "get_binary_matrix() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.get_binary_matrix"]], "get_binary_representation() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.get_binary_representation"]], "get_depths() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.get_depths"]], "get_depths_interactions() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.get_depths_interactions"]], "get_params() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.get_params"]], "predict() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.predict"]], "predict_proba() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.predict_proba"]], "score() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.score"]], "set_params() (piml.models.figsclassifier method)": [[24, "piml.models.FIGSClassifier.set_params"]], "figsregressor (class in piml.models)": [[25, "piml.models.FIGSRegressor"]], "fit() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.fit"]], "get_binary_matrix() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.get_binary_matrix"]], "get_binary_representation() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.get_binary_representation"]], "get_depths() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.get_depths"]], "get_depths_interactions() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.get_depths_interactions"]], "get_params() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.get_params"]], "predict() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.predict"]], "score() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.score"]], "set_params() (piml.models.figsregressor method)": [[25, "piml.models.FIGSRegressor.set_params"]], "gamclassifier (class in piml.models)": [[26, "piml.models.GAMClassifier"]], "get_params() (piml.models.gamclassifier method)": [[26, "piml.models.GAMClassifier.get_params"]], "set_params() (piml.models.gamclassifier method)": [[26, "piml.models.GAMClassifier.set_params"]], "gaminetclassifier (class in piml.models)": [[27, "piml.models.GAMINetClassifier"]], "certify_mono() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.certify_mono"]], "decision_function() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.decision_function"]], "fine_tune_selected() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.fine_tune_selected"]], "fit() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.fit"]], "get_aggregate_output() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_aggregate_output"]], "get_clarity_loss() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_clarity_loss"]], "get_effect_importance() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_effect_importance"]], "get_feature_importance() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_feature_importance"]], "get_interaction_raw_output() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_interaction_raw_output"]], "get_main_effect_raw_output() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_main_effect_raw_output"]], "get_mono_loss() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_mono_loss"]], "get_params() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.get_params"]], "global_explain() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.global_explain"]], "load() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.load"]], "local_effect_explain() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.local_effect_explain"]], "local_feature_explain() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.local_feature_explain"]], "partial_derivatives() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.partial_derivatives"]], "predict() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.predict"]], "predict_proba() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.predict_proba"]], "save() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.save"]], "score() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.score"]], "set_params() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.set_params"]], "show_effect_importance() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.show_effect_importance"]], "show_feature_importance() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.show_feature_importance"]], "show_global_explain() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.show_global_explain"]], "show_local_effect_explain() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.show_local_effect_explain"]], "show_local_feature_explain() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.show_local_feature_explain"]], "show_loss_trajectory() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.show_loss_trajectory"]], "show_regularization_path() (piml.models.gaminetclassifier method)": [[27, "piml.models.GAMINetClassifier.show_regularization_path"]], "gaminetregressor (class in piml.models)": [[28, "piml.models.GAMINetRegressor"]], "certify_mono() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.certify_mono"]], "fine_tune_selected() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.fine_tune_selected"]], "fit() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.fit"]], "get_aggregate_output() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_aggregate_output"]], "get_clarity_loss() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_clarity_loss"]], "get_effect_importance() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_effect_importance"]], "get_feature_importance() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_feature_importance"]], "get_interaction_raw_output() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_interaction_raw_output"]], "get_main_effect_raw_output() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_main_effect_raw_output"]], "get_mono_loss() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_mono_loss"]], "get_params() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.get_params"]], "global_explain() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.global_explain"]], "load() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.load"]], "local_effect_explain() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.local_effect_explain"]], "local_feature_explain() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.local_feature_explain"]], "partial_derivatives() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.partial_derivatives"]], "predict() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.predict"]], "save() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.save"]], "score() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.score"]], "set_params() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.set_params"]], "show_effect_importance() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.show_effect_importance"]], "show_feature_importance() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.show_feature_importance"]], "show_global_explain() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.show_global_explain"]], "show_local_effect_explain() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.show_local_effect_explain"]], "show_local_feature_explain() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.show_local_feature_explain"]], "show_loss_trajectory() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.show_loss_trajectory"]], "show_regularization_path() (piml.models.gaminetregressor method)": [[28, "piml.models.GAMINetRegressor.show_regularization_path"]], "gamregressor (class in piml.models)": [[29, "piml.models.GAMRegressor"]], "get_params() (piml.models.gamregressor method)": [[29, "piml.models.GAMRegressor.get_params"]], "set_params() (piml.models.gamregressor method)": [[29, "piml.models.GAMRegressor.set_params"]], "glmclassifier (class in piml.models)": [[30, "piml.models.GLMClassifier"]], "glmregressor (class in piml.models)": [[31, "piml.models.GLMRegressor"]], "reludnnclassifier (class in piml.models)": [[32, "piml.models.ReluDNNClassifier"]], "decision_function() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.decision_function"]], "fit() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.fit"]], "get_params() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.get_params"]], "get_raw_output() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.get_raw_output"]], "predict() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.predict"]], "predict_proba() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.predict_proba"]], "score() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.score"]], "set_params() (piml.models.reludnnclassifier method)": [[32, "piml.models.ReluDNNClassifier.set_params"]], "reludnnregressor (class in piml.models)": [[33, "piml.models.ReluDNNRegressor"]], "fit() (piml.models.reludnnregressor method)": [[33, "piml.models.ReluDNNRegressor.fit"]], "get_params() (piml.models.reludnnregressor method)": [[33, "piml.models.ReluDNNRegressor.get_params"]], "get_raw_output() (piml.models.reludnnregressor method)": [[33, "piml.models.ReluDNNRegressor.get_raw_output"]], "predict() (piml.models.reludnnregressor method)": [[33, "piml.models.ReluDNNRegressor.predict"]], "score() (piml.models.reludnnregressor method)": [[33, "piml.models.ReluDNNRegressor.score"]], "set_params() (piml.models.reludnnregressor method)": [[33, "piml.models.ReluDNNRegressor.set_params"]]}})